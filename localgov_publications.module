<?php

/**
 * @file
 * Module file for the LocalGov Publications module.
 */

use Drupal\Core\Url;
use Drupal\node\NodeInterface;
use Drupal\user\Entity\Role;

/**
 * Implements hook_theme().
 */
function localgov_publications_theme($existing, $type, $theme, $path) {
  return [
    'book_navigation__publication' => [
      'template' => 'book-navigation--publication',
      'base hook' => 'book_navigation__publication',
    ],
    'paragraph__localgov_numbered_text' => [
      'template' => 'paragraph--localgov-numbered-text',
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * Implements hook_install().
 */
function localgov_publications_modules_installed($modules, $is_syncing) {
  if (!$is_syncing && in_array('localgov_publications', $modules)) {
    // Add permission to use the publications text format this module provides.
    $role_object = Role::load('authenticated');
    $role_object->grantPermission('use text format publications');
    $role_object->save();
  }
}

/**
 * Is the given type one of the publication node types?
 */
function localgov_publications_is_publication_type(string $type): bool {
  return $type === 'localgov_publication_page' || $type === 'publication_landing_page';
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function localgov_publications_theme_suggestions_book_navigation(array $variables) {
  $suggestions = [];

  // Only add suggestion on publication pages and publication landing pages.
  $node = \Drupal::routeMatch()->getParameter('node');
  if (localgov_publications_is_publication_type($node->getType())) {
    $original = $variables['theme_hook_original'] . '__';
    $suggestions[] = $original . 'publication';
  }

  return $suggestions;
}

/**
 * Implements hook_node_links_alter().
 *
 * If book module has added the "Add child page" link, and we're on a
 * publication type page, alter the link, so it creates a
 * localgov_publication_page, instead of the default book type.
 */
function localgov_publications_node_links_alter(array &$links, NodeInterface $node, array &$context) {

  if (localgov_publications_is_publication_type($node->getType()) && !empty($links['book']['#links']['book_add_child'])) {
    $links['book']['#links']['book_add_child']['url'] = Url::fromRoute('node.add', ['node_type' => 'localgov_publication_page'], ['query' => ['parent' => $node->id()]]);
  }
}
